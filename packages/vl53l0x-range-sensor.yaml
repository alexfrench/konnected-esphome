i2c:
  sda: $sda
  scl: $scl
  scan: True

number:
  - platform: template
    id: open_garage_door_distance_from_ceiling
    icon: mdi:ruler
    internal: true
    entity_category: config
    unit_of_measurement: m
    device_class: distance
    step: 0.01
    max_value: 2.0
    min_value: 0.1
    optimistic: true
    restore_value: true

sensor:
  - platform: vl53l0x
    update_interval: 5s
    long_range: true
    accuracy_decimals: 2
    id: range_sensor
    entity_category: diagnostic
    
api:
  services:
    - service: calibrate_open_garage
      then:
        - number.set:
            id: open_garage_door_distance_from_ceiling
            value: !lambda return id(range_sensor).state;

binary_sensor:
  - platform: template
    id: garage_door_range_sensor
    internal: true
    lambda: |-
      float calibrated_distance = id(open_garage_door_distance_from_ceiling).state;
      if (std::isnan(id(range_sensor).state) || id(range_sensor).state > calibrated_distance + $open_garage_door_distance_margin_of_error) {
        return false;
      } else if (id(range_sensor).state > calibrated_distance - $open_garage_door_distance_margin_of_error){
        return true;
      } else {
        return {};
      }
